#>
# Source Code for the Original Compiler for the
# Programming Language Wake
#
# Primitives.wk
#
# Licensed under the MIT license
# See LICENSE.TXT for details
#
# Author: Michael Fairhurst
# Revised By:
#
##

every Bool is:

	Text -- toString() { return ""; }

every Num is:

	Num -- modulo(Num) { return 0; }
	Num -- floor() { return 0; }
	Num -- ceil() { return 0; }
	Num -- round() { return 0; }
	Num -- squared() { return 0; }
	Num -- abs() { return 0; }

	Num -- orMaxOf(Num) { return 0; }
	Num -- orMaxOf(Num[]) { return 0; }

	Num -- orMinOf(Num) { return 0; }
	Num -- orMinOf(Num[]) { return 0; }

	Num -- numberOfDigits() { return 0; }

	Text -- toString() { return ""; }

	Num[] -- range(Num) { var Num[] = []; return Num[]; }

every Text is:

	Text -- toUpper() { return "stub"; }
	Text -- toLower() { return "stub"; }
	Text -- switchCase() { return "stub"; }

	Text -- trim() { return "stub"; }

	Num -- getSize() { return 0; }

	Text -- substr(Num start) { return "stub"; }
	Text -- substr(Num start, Num end) { return "stub"; }

	Num? -- parseNum() { return 0; }

	Text? -- charAt(Num) { return ""; }

	Text[] -- split(Text) { var Text[] = []; return Text[]; }

	Num? -- indexOf(Text) { return 0; }

	Text -- join(Text[]) { return ""; }
