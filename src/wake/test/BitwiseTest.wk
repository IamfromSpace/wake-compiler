#>
# Source Code for the Original Compiler for the
# Programming Language Wake
#
# MathTest.wk
#
# Licensed under the MIT license
# See LICENSE.TXT for details
#
# Author: Nathan Fairhurst
# Revised By:
#
##

import Asserts;

@TestClass
every BitwiseTest is:

	@Test
	testBitShiftLeft(Asserts) {
		Asserts.that(1 << 3)Equals(8);
		Asserts.that(10 << 2)Equals(40);
		Asserts.that(1.9 << 3)Equals(8);
	}
	
	@Test
	testBitShiftRight(Asserts) {
		Asserts.that(8 >> 3)Equals(1);
		Asserts.that(40 >> 2)Equals(10);
		Asserts.that(40.1 >>2)Equals(10);
	}
	
	@Test
	testBitAnd(Asserts) {
		Asserts.that(183550952 & 154807247)Equals(137364424);
		Asserts.that(162447073.1 & 423521256)Equals(154020576);
		Asserts.that(8 & 5)Equals(0);
		Asserts.that(5 & 8)Equals(0);
	}
	
	@Test
	testBitXor(Asserts) {
		Asserts.that(138 ^ 141)Equals(7);
		Asserts.that(5.424 ^ 25)Equals(28);
		Asserts.that(29 ^ 221)Equals(192);
		Asserts.that(221 ^ 29)Equals(192);
	}
	
	testBitOr(Asserts) {
		Asserts.that(64 | 148)Equals(212);
		Asserts.that(96.341 | 88)Equals(120);
		Asserts.that(15 | 178)Equals(191);
		Asserts.that(178 | 15)Equals(191);
	}
	
	@Test
	testOrderOfOperations(Asserts) {
		Asserts.that(1 << 3 * 5)Equals(32768);
		Asserts.that(5 * 1 << 3)Equals(40);
		Asserts.that(1 << 3 + 5)Equals(256);
		Asserts.that(1 + 5 << 3)Equals(48);
		Asserts.that(141 << 1 & 54)Equals(18);
		Asserts.that(54 & 141 << 1)Equals(18);
		Asserts.that(93 & 86 ^ 223)Equals(139);
		Asserts.that(223 ^ 93 & 86)Equals(139);
		Asserts.that(127 ^ 206 | 168)Equals(185);
		Asserts.that(168 | 127 ^ 206)Equals(185);
	}