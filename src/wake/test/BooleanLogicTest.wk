#>
# Source Code for the Original Compiler for the
# Programming Language Wake
#
# BooleanLogicTest.wk
#
# Licensed under the MIT license
# See LICENSE.TXT for details
#
# Author: Michael Fairhurst
# Revised By:
#
##

import Asserts;

every BooleanLogicTest is:

	testNot(Asserts) {
		Asserts.that(!true)Equals(false);
		Asserts.that(!false)Equals(true);
	}

	testOr(Asserts) {
		Asserts.that(true  || true)Equals(true);
		Asserts.that(false || true)Equals(true);
		Asserts.that(true  || false)Equals(true);
		Asserts.that(false || false)Equals(false);
	}

	testAnd(Asserts) {
		Asserts.that(true  && true)Equals(true);
		Asserts.that(false && true)Equals(false);
		Asserts.that(true  && false)Equals(false);
		Asserts.that(false && false)Equals(false);
	}

	testOrderOfOperations(Asserts) {
		Asserts.that(true  && true  || false)Equals(true);
		Asserts.that(true  && false || false)Equals(false);
		Asserts.that(false && true  || false)Equals(false);
		Asserts.that(false && false || false)Equals(false);
		Asserts.that(true  && true  || true)Equals(true);
		Asserts.that(true  && false || true)Equals(true);
		Asserts.that(false && true  || true)Equals(true);
		Asserts.that(false && false || true)Equals(true);
		Asserts.that(true  || true  && false)Equals(true);
		Asserts.that(true  || false && false)Equals(true);
		Asserts.that(false || true  && false)Equals(false);
		Asserts.that(false || false && false)Equals(false);
		Asserts.that(true  || true  && true)Equals(true);
		Asserts.that(true  || false && true)Equals(true);
		Asserts.that(false || true  && true)Equals(true);
		Asserts.that(false || false && true)Equals(false);
		Asserts.that(!true  && true  )Equals(false);
		Asserts.that(true   && !true )Equals(false);
		Asserts.that(!true  && false )Equals(false);
		Asserts.that(true   && !false)Equals(true);
		Asserts.that(!false && true  )Equals(true);
		Asserts.that(false  && !true )Equals(false);
		Asserts.that(!false && false )Equals(false);
		Asserts.that(false  && !false)Equals(false);
		Asserts.that(!true  || true  )Equals(true);
		Asserts.that(true   || !true )Equals(true);
		Asserts.that(!true  || false )Equals(false);
		Asserts.that(true   || !false)Equals(true);
		Asserts.that(!false || true  )Equals(true);
		Asserts.that(false  || !true )Equals(false);
		Asserts.that(!false || false )Equals(true);
		Asserts.that(false  || !false)Equals(true);
	}
